First use of remote repositories are when multiple developers are working on the same project. They check other's work add and make the final project a real team work

one of the main reasons of pulling manually can be avoiding any possible conflicts that our local and remote version might cause after merging

branches are always for a single repo (when we wanna get creative)
cloning is for localizing a remote into our own machine
forking is very similar to cloning but on GitHub servers which also gives notifications to the original author

having the last update from remote not only help us to be aware of the flow of project at mater branch, but also would help us comparing our own branch at remote master's

if git and gitHub or any other version control cannot be used; for working collaboratively, sending code through email after each update can be the only option.
even in that case sending commits, checking for differences between files and everything else would be much much more expensive

merging a separate branch instead of directly pushing into master won't allow others to re-check the code and see if it really is going to help by being added to master or not.
Others could be us also when we might rethink adding a feature wouldn't do much to our project.
